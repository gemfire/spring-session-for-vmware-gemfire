---
resource_types:
- name: registry-image
  type: docker-image
  source:
    repository: concourse/registry-image-resource
- name: gci
  type: registry-image
  source:
    registry_mirror:
      host: mirror.gcr.io
    repository: smgoller/gci-resource
- name: json-gcs-resource
  type: registry-image
  source:
    username: ((docker-username))
    password: ((docker-password))
    repository: gcr.io/((gcp-project))/((pipeline-prefix))gcs-resource-with-json-content
    tag: latest

- name: concourse-metadata-resource
  type: docker-image
  source:
    password: ((docker-password))
    repository: gcr.io/((gcp-project))/((pipeline-prefix))concourse-metadata-resource
    tag: latest
    username: ((docker-username))

resources:
- name: concourse-metadata-resource
  type: concourse-metadata-resource
  source: {}

- name: gcs-resource-with-json-content
  icon: github
  type: git
  check_every: 168h
  source:
    branch: master
    uri: https://github.com/steve-sienk/gcs-resource.git

- name: gcs-resource-with-json-content-image
  icon: docker
  type: registry-image
  source:
    username: ((docker-username))
    password: ((docker-password))
    repository: gcr.io/((gcp-project))/((pipeline-prefix))gcs-resource-with-json-content
    tag: latest

- name: google-cloud-sdk-image
  type: registry-image
  source:
    registry_mirror:
      host: mirror.gcr.io
    repository: google/cloud-sdk
    tag: alpine

- name: linux-base-family
  type: gci
  check_every: 24h
  source:
    key: ((concourse-gcp-key))
    family_project: ubuntu-os-cloud
    family: ((linux-base-family))

- name: linux-ssdg-builder-image-family
  type: gci
  source:
    key: ((concourse-gcp-key))
    family_project: ((gcp-project))
    family: ((pipeline-prefix))linux-ssdg-builder

- name: google-ssdg-builder
  type: git
  source:
    branch: {{repositories.springSessionDataGemfire.branch}}
    uri: git@github.com:{{ repositories.springSessionDataGemfire.fork }}/{{ repositories.springSessionDataGemfire.repo }}.git
    private_key: ((gemfire-ci-private-key))
    paths:
    - ci/scripts/build_image.sh
    - ci/images/google-ssdg-builder

- name: hashicorp-packer-image
  type: registry-image
  source:
    registry_mirror:
      host: mirror.gcr.io
    repository: hashicorp/packer
    tag: 1.4.5

- name: oci-build-task-image
  type: registry-image
  source:
    registry_mirror:
      host: mirror.gcr.io
    repository: concourse/oci-build-task

- name: utilities-alpine-tools-dockerfile
  icon: github
  type: git
  source:
    depth: 1
    branch: {{ repositories.springSessionDataGemfire.branch }}
    uri: git@github.com:{{ repositories.springSessionDataGemfire.fork }}/{{ repositories.springSessionDataGemfire.repo }}.git
    private_key: ((gemfire-ci-private-key))
    paths:
    - ci/images/utilities-alpine-tools

- name: utilities-alpine-tools-docker-image
  icon: docker
  type: registry-image
  source:
    username: "_json_key"
    password: ((concourse-gcp-key))
    repository: gcr.io/((gcp-project))/((pipeline-prefix))utilities-alpine-tools
    tag: latest

- name: concourse-metadata-resource-dockerfile
  icon: github
  type: git
  source:
    branch: {{ repositories.springSessionDataGemfire.branch }}
    uri: git@github.com:{{ repositories.springSessionDataGemfire.fork }}/{{ repositories.springSessionDataGemfire.repo }}.git
    private_key: ((gemfire-ci-private-key))
    paths:
    - ci/resource-types/concourse-metadata-resource/*

- name: concourse-metadata-resource-docker-image
  type: registry-image
  source:
    username: ((docker-username))
    password: ((docker-password))
    repository: gcr.io/((gcp-project))/((pipeline-prefix))concourse-metadata-resource
    tag: latest

- name: gemfire-blessed-token
  icon: diamond-stone
  type: json-gcs-resource
  source:
    bucket: blessed-geode
    json_key: ((concourse-gcp-key))
    regexp: vmware-gemfire-({{ gemfireVersion }}.*)-passing-tokens.json

- name: spring-session-data-gemfire-build-version
  type: semver
  source:
    bucket: ((artifact-bucket))
    driver: gcs
    initial_version: 1.0.0
    json_key: ((concourse-gcp-key))
    key: semvers/((pipeline-prefix)){{ repositories.springSessionDataGemfire.branch }}/number

- name: spring-session-data-gemfire
  icon: github
  type: git
  source:
    branch: {{ repositories.springSessionDataGemfire.branch }}
    uri: git@github.com:{{ repositories.springSessionDataGemfire.fork }}/{{ repositories.springSessionDataGemfire.repo }}.git
    private_key: ((gemfire-ci-private-key))
    exclude_paths:
    - ci/*
- name: spring-session-data-gemfire-ci
  icon: github
  type: git
  source:
    branch: {{ repositories.springSessionDataGemfire.branch }}
    uri: git@github.com:{{ repositories.springSessionDataGemfire.fork }}/{{ repositories.springSessionDataGemfire.repo }}.git
    private_key: ((gemfire-ci-private-key))
    paths:
    - ci/*

- name: spring-data-tanzu-gemfire-build-version
  type: semver
  source:
    bucket: ((artifact-bucket))
    driver: gcs
    json_key: ((concourse-gcp-key))
    key: semvers/{{repositories.springDataTanzuGemfire.pipelinePrefix}}{{ repositories.springDataTanzuGemfire.branch }}/number

jobs:
# alpine-tools
- name: build-utilities-alpine-tools-docker-image
  plan:
  # fetch repository source (containing Dockerfile)
  - in_parallel:
    - get: utilities-alpine-tools-dockerfile
      trigger: true
    - get: google-cloud-sdk-image
      trigger: true
    - get: hashicorp-packer-image
      trigger: true
    - get: oci-build-task-image
  # build using `oci-build` task
  #
  # note: this task config could be pushed into `my-image-src` and loaded using
  # `file:` instead
  - task: build
    image: oci-build-task-image
    privileged: true
    config:
      platform: linux
      params:
        CONTEXT: utilities-alpine-tools-dockerfile/ci/images/utilities-alpine-tools
      inputs:
      - name: utilities-alpine-tools-dockerfile
      outputs:
      - name: image
      caches:
      - path: cache
      run:
        path: build
  # push using `registry-image` resource
  - put: utilities-alpine-tools-docker-image
    params: {image: image/image.tar}

# concourse-metadata-resource
- name: build-concourse-metadata-resource-docker-image
  plan:
  # fetch repository source (containing Dockerfile)
  - in_parallel:
    - get: concourse-metadata-resource-dockerfile
      trigger: true
    - get: google-cloud-sdk-image
      trigger: true
    - get: hashicorp-packer-image
      trigger: true
    - get: oci-build-task-image
  # build using `oci-build` task
  #
  # note: this task config could be pushed into `my-image-src` and loaded using
  # `file:` instead
  - task: build
    image: oci-build-task-image
    privileged: true
    config:
      platform: linux
      params:
        CONTEXT: concourse-metadata-resource-dockerfile/ci/resource-types/concourse-metadata-resource
      inputs:
      - name: concourse-metadata-resource-dockerfile
      outputs:
      - name: image
      caches:
      - path: cache
      run:
        path: build
  # push using `registry-image` resource
  - put: concourse-metadata-resource-docker-image
    params: {image: image/image.tar}

- name: build-json-gcs-resource-image
  serial: true
  plan:
  - in_parallel:
    - get: gcs-resource-with-json-content
      trigger: true
    - get: oci-build-task-image
  - task: build-json-gcs-resource-image
    privileged: true
    image: oci-build-task-image
    config:
      platform: linux
      inputs:
      - name: gcs-resource-with-json-content
      outputs:
      - name: image
      params:
        CONTEXT: gcs-resource-with-json-content
      run:
        path: build
  - put: gcs-resource-with-json-content-image
    params:
      image: image/image.tar

- name: build-google-ssdg-builder
  serial: true
  plan:
  - in_parallel:
    - get: google-ssdg-builder
      trigger: true
    - get: utilities-alpine-tools-docker-image
      passed: [build-utilities-alpine-tools-docker-image]
    - get: linux-base-family
      trigger: true
  - task: build-image
    timeout: 1h
    image: utilities-alpine-tools-docker-image
    config:
      inputs:
      - name: google-ssdg-builder
      - name: linux-base-family
        path: base-family
      outputs:
      - name: results
      platform: linux
      params:
        PIPELINE_PREFIX: ((pipeline-prefix))
        GCP_PROJECT: ((gcp-project))
        GCP_NETWORK: ((gcp-network))
        GCP_SUBNETWORK: ((gcp-subnet))
        INTERNAL: "true"
        CONCOURSE_GCP_KEY: "((concourse-gcp-key))"
        JAVA_BUILD_VERSION: 8
      run:
        path: google-ssdg-builder/ci/scripts/build_image.sh
        args:
        - google-ssdg-builder/ci/images/google-ssdg-builder/packer.json

- name: build-spring-session-data-gemfire
  max_in_flight: 1
  ensure:
    task: delete_instance
    image: utilities-alpine-tools-docker-image
    config:
      platform: linux
      params:
        DELETE_INSTANCE: {{ instanceSettings.deleteInstance }}
      run:
        path: spring-session-data-gemfire-ci/ci/scripts/delete_instance.sh
      inputs:
      - name: spring-session-data-gemfire-ci
      - name: instance-data
    timeout: 1h
  plan:
  - in_parallel:
    - get: gemfire-blessed-token
      trigger: true
    - get: spring-session-data-gemfire-ci
    - get: utilities-alpine-tools-docker-image
    - get: spring-session-data-gemfire
      trigger: true
    - get: spring-session-data-gemfire-build-version
      params:
        pre: ((semver-prerelease-token))
    - get: linux-ssdg-builder-image-family
    - get: spring-data-tanzu-gemfire-build-version
      trigger: true
  - do:
    - put: concourse-metadata-resource
    - task: initial-output
      image: utilities-alpine-tools-docker-image
      config:
        platform: linux
        outputs:
        - name: attempts-log
        run:
          path: touch
          args: ['attempts-log/attempts']
    - task: create_instance
      image: utilities-alpine-tools-docker-image
      config:
        platform: linux
        params:
          GCP_PROJECT: ((gcp-project))
          GCP_NETWORK: ((gcp-network))
          GCP_SUBNETWORK: ((gcp-subnet))
          GCP_ZONE: ((gcp-zone))
          CPUS: '8'
          RAM: '16'
          DISK: '200GB'
          SSDG_BRANCH: {{ repositories.springSessionDataGemfire.branch }}
          SSDG_FORK: {{ repositories.springSessionDataGemfire.fork }}
          JAVA_BUILD_VERSION: 17
          IMAGE_FAMILY_NAME: ((pipeline-prefix))linux-ssdg-builder
        run:
          path: spring-session-data-gemfire-ci/ci/scripts/create_instance.sh
        inputs:
        - name: attempts-log
          path: old
        - name: concourse-metadata-resource
        - name: spring-session-data-gemfire
        - name: spring-session-data-gemfire-ci
        - name: linux-ssdg-builder-image-family
          path: builder-image
        outputs:
        - name: attempts-log
          path: new
        - name: instance-data
      timeout: 20m
      attempts: 5
      on_failure:
        task: delete_instance
        image: utilities-alpine-tools-docker-image
        config:
          platform: linux
          params:
            DELETE_INSTANCE: {{ instanceSettings.deleteInstance }}
          run:
            path: spring-session-data-gemfire-ci/ci/scripts/delete_instance.sh
          inputs:
          - name: spring-session-data-gemfire-ci
          - name: instance-data
        timeout: 1h
  - in_parallel:
    - put: spring-session-data-gemfire-build-version
      params:
        file: spring-session-data-gemfire-build-version/number
    - task: rsync_code_up
      image: utilities-alpine-tools-docker-image
      config:
        platform: linux
        run:
          path: spring-session-data-gemfire-ci/ci/scripts/rsync_code_up.sh
        inputs:
        - name: spring-session-data-gemfire-ci
        - name: spring-session-data-gemfire
        - name: instance-data
    timeout: 15m
    attempts: 5
    on_failure:
      task: delete_instance
      image: utilities-alpine-tools-docker-image
      config:
        platform: linux
        params:
          DELETE_INSTANCE: {{ instanceSettings.deleteInstance }}
        run:
          path: spring-session-data-gemfire-ci/ci/scripts/delete_instance.sh
        inputs:
        - name: spring-session-data-gemfire-ci
        - name: instance-data
      timeout: 1h
  - task: build
    image: utilities-alpine-tools-docker-image
    config:
      platform: linux
      params:
        JAVA_BUILD_VERSION: {{ java_build_version.version }}
        GRADLE_TASK: build
        MAINTENANCE_VERSION: ((spring-session-data-gemfire-build-branch ))
        SERVICE_ACCOUNT: ((concourse-gcp-account))
        MAVEN_USERNAME: ((pivotal-repo-username))
        MAVEN_PASSWORD: ((pivotal-repo-password))
        COMMERCIAL_REPO_USERNAME: ((commercial-repo-username))
        COMMERCIAL_REPO_PASSWORD: ((commercial-repo-password))
        ORG_GRADLE_PROJECT_mavenPassword: ((pivotal-repo-password))
        ORG_GRADLE_PROJECT_mavenUser: ((pivotal-repo-username))
        SDTG_ARTIFACT_PREFIX: {{ repositories.springDataTanzuGemfire.branch }}
      run:
        path: spring-session-data-gemfire-ci/ci/scripts/execute_build.sh
      inputs:
      - name: gemfire-blessed-token
      - name: spring-session-data-gemfire-ci
      - name: spring-session-data-gemfire
      - name: instance-data
      - name: spring-session-data-gemfire-build-version
      - name: spring-data-tanzu-gemfire-build-version
      outputs:
      - name: built-spring-session-data-gemfire
      - name: results
    timeout: 30m
    ensure:
      do:
      - task: rsync_code_down
        image: utilities-alpine-tools-docker-image
        config:
          platform: linux
          params:
            JAVA_BUILD_VERSION: {{ java_build_version.version }}
          run:
            path: spring-session-data-gemfire-ci/ci/scripts/rsync_code_down.sh
          inputs:
          - name: spring-session-data-gemfire-ci
          - name: spring-session-data-gemfire
          - name: instance-data
          outputs:
          - name: spring-session-data-gemfire-results
        timeout: 20m
        attempts: 5
      ensure:
        do:
        - in_parallel:
          - task: archive_results
            image: utilities-alpine-tools-docker-image
            config:
              platform: linux
              params:
                ARTIFACT_SLUG: build-{{java_build_version.name}}
                GRADLE_TASK: build
                MAINTENANCE_VERSION: ((spring-session-data-gemfire-build-branch))
                ARTIFACT_BUCKET: ((artifact-bucket))
                SERVICE_ACCOUNT: ((concourse-gcp-account))
                TAR_SPRING_DATA_GEMFIRE_BUILD_ARTIFACTS: true
              run:
                path: spring-session-data-gemfire-ci/ci/scripts/archive_results.sh
              inputs:
              - name: spring-session-data-gemfire
              - name: concourse-metadata-resource
              - name: spring-session-data-gemfire-ci
              - name: spring-session-data-gemfire-build-version
              - name: spring-session-data-gemfire-results
            timeout: 1h
          - task: delete_instance
            image: utilities-alpine-tools-docker-image
            config:
              platform: linux
              params:
                DELETE_INSTANCE: {{ instanceSettings.deleteInstance }}
              run:
                path: spring-session-data-gemfire-ci/ci/scripts/delete_instance.sh
              inputs:
              - name: spring-session-data-gemfire
              - name: spring-session-data-gemfire-ci
              - name: instance-data
            timeout: 1h
